// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ

function changeLanguage(lang) {
    const url = new URL(window.location.href);
    url.searchParams.set("lang", lang);
    window.location.href = url.toString();
  }
  
function openSupportModal(type) {
  const modalContainer = document.getElementById("support-modal-container");
  if (!modalContainer) return;

  const modalContent = {
    faq: `
      <div class="modal active" role="dialog" aria-modal="true">
        <div class="modal-overlay" onclick="closeSupportModal()"></div>
        <div class="modal-box">
          <h2 data-i18n="native-support.modal.faq">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          <ul class="modal-list">
            <li><strong data-i18n="native-support.modal.q1">–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å AI-–º–æ–¥—É–ª—å?</strong><br data-i18n="native-support.modal.a1">–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª ‚Äú–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è‚Äù –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é.</li>
            <li><strong data-i18n="native-support.modal.q2">–ì–¥–µ –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞?</strong><br data-i18n="native-support.modal.a2">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ üåê –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É.</li>
          </ul>
          <button class="modal-close" onclick="closeSupportModal()" data-i18n="native-support.modal.close">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
      </div>
    `,
    form: `
      <div class="modal active" role="dialog" aria-modal="true">
        <div class="modal-overlay" onclick="closeSupportModal()"></div>
        <div class="modal-box">
          <h2 data-i18n="native-support.modal.feedback">–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</h2>
          <form id="support-form">
            <input type="text" name="name" placeholder="–í–∞—à–µ –∏–º—è" required data-i18n-placeholder="native-support.modal.name" />
            <input type="email" name="email" placeholder="Email" required data-i18n-placeholder="native-support.modal.email" />
            <textarea name="message" placeholder="–í–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" required data-i18n-placeholder="native-support.modal.message"></textarea>
            <button type="submit" data-i18n="native-support.modal.send">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </form>
          <button class="modal-close" onclick="closeSupportModal()" data-i18n="native-support.modal.close">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
      </div>
    `,
   chat: `
  <div class="modal active" role="dialog" aria-modal="true">
    <div class="modal-overlay" onclick="closeSupportModal()"></div>
    <div class="modal-box">
      <h2 data-i18n="native-support.modal.chat">–ß–∞—Ç —Å AI</h2>
      <p data-i18n="native-support.modal.chat-desc">–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî AI –æ—Ç–≤–µ—Ç–∏—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.</p>

      <label style="display: flex; align-items: center; gap: 0.4rem; margin: 1rem 0;">
        <input type="checkbox" checked />
        <span data-i18n="native-support.modal.autoformat">–ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å</span>
      </label>

      <div class="chat-error">
        <pre class="chat-log" style="font-size: 0.9rem; background: #eee; padding: 1rem; border-radius: 0.5rem;">
{
  "error": {
    "message": "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ."
  }
}
        </pre>
      </div>

      <!-- –ú–µ—Å—Ç–æ –ø–æ–¥ iframe -->
      <!-- <iframe src="/chat" title="AI —á–∞—Ç" style="width:100%; height:300px; border:none; border-radius:10px;"></iframe> -->

      <button class="modal-close" onclick="closeSupportModal()" data-i18n="native-support.modal.close">–ó–∞–∫—Ä—ã—Ç—å</button>
    </div>
  </div>
`
,
  };

  modalContainer.innerHTML = modalContent[type] || "";
  localizePage(getCurrentLang());
}

function closeSupportModal() {
  const modalContainer = document.getElementById("support-modal-container");
  if (modalContainer) modalContainer.innerHTML = "";
}

// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
function getCurrentLang() {
  return new URLSearchParams(window.location.search).get("lang") || "ru";
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö .lottie-–±–ª–æ–∫–æ–≤
document.addEventListener("DOMContentLoaded", () => {
  document.querySelectorAll(".lottie[data-lottie]").forEach(el => {
    const path = el.getAttribute("data-lottie");
    lottie.loadAnimation({
      container: el,
      renderer: "svg",
      loop: true,
      autoplay: true,
      path
    });
  });
});

